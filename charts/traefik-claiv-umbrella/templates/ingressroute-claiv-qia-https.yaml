---
{{- if .Values.ingressRoutes.claiv.enabled }}
#=========================================
# HTTPS Section
#=========================================
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: qi-annotator-ingressroute-websecure
  namespace: kube-system
spec:
  entryPoints:
    - websecure
  routes:
  #=================================================================================
  # QiAnnotator Project Page
  #
  - match: Host(`{{ .Values.host }}`)
    kind: Rule
    services:
    - name: qiadocs
      namespace: qia-cloud
      port: 3000
    middlewares:
    - name: traefik-forward-auth # This needs to be created aswell (usually by traefik installation)
  #
  #=================================================================================
  # qia_components java script components css and fonts
  #
  - match: Host(`{{ .Values.host }}`) && PathPrefix(`/qia-components`)
    kind: Rule
    services:
    - name: qiac
      namespace: qia-cloud
      port: 3031
    middlewares:
    - name: traefik-forward-auth
  
  #
  #
  #=================================================================================
  # qia_components provided image assets
  #    
  - match: Host(`{{ .Values.host }}`) && PathPrefix(`/img`)
    kind: Rule
    services:
    - name: qiac
      namespace: qia-cloud
      port: 3031
    middlewares:
    - name: traefik-forward-auth
  - match: Host(`{{ .Values.host }}`) && PathPrefix(`/img`) && Method(`HEAD`)
    kind: Rule
    services:
    - name: qiac
      namespace: qia-cloud
      port: 3031
    middlewares:  
  #
  #
  #=================================================================================
  # Backend Service to provide multidimensional images (zarr) format
  #
  - match: Host(`{{ .Values.host }}`) && PathPrefix(`/raw_data`)
    kind: Rule
    services:
    - name: clarence
      namespace: qia-cloud
      port: 8080
    middlewares:
    - name: traefik-forward-auth
  - match: Host(`{{ .Values.host }}`) && PathPrefix(`/raw_data`) && Method(`HEAD`)
    kind: Rule
    services:
    - name: clarence
      namespace: qia-cloud
      port: 8080    

  #
  #=================================================================================
  # Jupyter Hub
  #
  - match: Host(`{{ .Values.host }}`) && PathPrefix(`/hub`)
    kind: Rule
    services:
    - name: proxy-public
      namespace: jhub
      port: 80
    middlewares:
    - name: traefik-forward-auth
  - match: Host(`{{ .Values.host }}`) && PathPrefix(`/user`)
    kind: Rule
    services:
    - name: proxy-public
      namespace: jhub
      port: 80
    middlewares:
    - name: traefik-forward-auth    
  #
  #---------------------------------------------------------------------------------  
  tls:
    secretName: {{ .Values.certificate.name}}
    domains: 
    - main: {{ .Values.host }}

{{- end}}